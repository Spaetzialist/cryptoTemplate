#mit Ausgabe von Gewinn/Verlust in % 

trading = require "trading"  
params = require "params"  
 

_maximumExchangeFee = params.add "Maximum exchange fee %", .25  
_maximumOrderAmount = params.add "Maximum order amount", 1  

_orderTimeout = params.add "Order timeout", 30  
MINIMUM_AMOUNT = .01  
  

init: ->  
    #This runs once when the bot is started  
handle: ->  
    #This runs once every tick or bar on the graph  
    storage.botStartedAt ?= data.at  
    instrument = data.instruments[0]  

    assetsAvailable = @portfolios[instrument.market].positions[instrument.asset()].amount  
    currencyAvailable = @portfolios[instrument.market].positions[instrument.curr()].amount  
    storage.startBalance ?= currencyAvailable 
    storage.startPrice ?= instrument.price #initial price 
    #debug "The current price: #{instrument.price}"  

    maximumBuyAmount = (currencyAvailable/instrument.price) * (1 - (_maximumExchangeFee/100))  
    maximumSellAmount = (assetsAvailable * (1 - (_maximumExchangeFee/100)))  


    if ((maximumBuyAmount >= MINIMUM_AMOUNT)&&(instrument.high[instrument.high.length-1]>instrument.high[instrument.high.length-2]))  
        trading.buy instrument, 'limit', Math.min(_maximumOrderAmount, maximumBuyAmount), instrument.price, _orderTimeout  

    if ((maximumSellAmount >= MINIMUM_AMOUNT)&&(instrument.high[instrument.high.length-1]<instrument.high[instrument.high.length-2]))  
        trading.sell instrument, 'limit', Math.min(_maximumOrderAmount, maximumSellAmount), instrument.price, _orderTimeout  


onRestart: ->  
    debug "Bot restarted at #{new Date(data.at)}"  

onStop: ->  
    instrument = data.instruments[0] 
    debug "Bot started at #{new Date(storage.botStartedAt)}"  
    debug "Bot stopped at #{new Date(data.at)}"  

    trading.sell instrument 
    currentBalance = @portfolios[instrument.market].positions[instrument.base()].amount 
    botProfit = ((currentBalance / storage.startBalance - 1)*100) 
    buhProfit = ((instrument.price / storage.startPrice - 1)*100) 

    info "botProfit = #{botProfit.toFixed(2)}%" 
    info "hodl Profit = #{buhProfit.toFixed(2)}%" 